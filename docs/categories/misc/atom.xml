<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Billy Messenger - Misc</title>
	<subtitle>The blogs I&#x27;ve written while developing audio software</subtitle>
	<link href="https://billydm.github.io/categories/misc/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://billydm.github.io/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-03-01T00:00:00+00:00</updated>
	<id>https://billydm.github.io/categories/misc/atom.xml</id>
	<entry xml:lang="en">
		<title>Hello World Post</title>
		<published>2022-03-01T00:00:00+00:00</published>
		<updated>2022-03-01T00:00:00+00:00</updated>
		<link href="https://billydm.github.io/blog/hello-world/" type="text/html"/>
		<id>https://billydm.github.io/blog/hello-world/</id>
		<content type="html">&lt;p&gt;Yay, I finally got Zola working!&lt;&#x2F;p&gt;
&lt;p&gt;It took me forever to figure out how to deploy it on GitHub pages.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;del&gt;I&#x27;ve also spent most of the day tweaking the CSS.&lt;&#x2F;del&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;By default Zola wants you to use their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shalzz&#x2F;zola-deploy-action&quot;&gt;zola-deploy-action&lt;&#x2F;a&gt; GitHub action for deploying to GitHub Pages, but it requires creating one of those security nightmares known as GitHub Personal Access Tokens. There is no way I&#x27;m doing that. The solution I found was to just build it on my computer with &lt;code&gt;zola build -o docs&lt;&#x2F;code&gt;. This puts the generated html files into the &lt;code&gt;&#x2F;docs&lt;&#x2F;code&gt; folder, and I then just commit it directly to the main branch.&lt;&#x2F;p&gt;
&lt;p&gt;Another main headache was figuring out that Zola treats themes in the &lt;code&gt;themes&lt;&#x2F;code&gt; folder as git submodules, so you can&#x27;t actually customize the CSS there. The solution was to just omit putting the theme in the theme folder and instead including the contents directly into my repo. I don&#x27;t want to rely on a submodule dependency for something as simple as a blog website. Even if I didn&#x27;t want to modify the CSS in the theme, GitHub&#x27;s default &lt;code&gt;github-pages&lt;&#x2F;code&gt; action would fail with an error saying it couldn&#x27;t find the &lt;code&gt;&#x2F;themes&#x2F;simplify&lt;&#x2F;code&gt; submodule. Ugh.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, using a native Rust tool is cool and all, but there definitely needs to be a cleaner way to deploy to GitHub pages. There &lt;em&gt;may&lt;&#x2F;em&gt; be a way that I&#x27;m just missing, but it&#x27;s not obvious and my way is working now so I don&#x27;t really care. I really like how my modified theme turned out so I&#x27;m sticking with Zola.&lt;&#x2F;p&gt;
&lt;p&gt;A meme to celebrate: ðŸŽ‰&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;dank_meme.jpg&quot; alt=&quot;dank meme&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
